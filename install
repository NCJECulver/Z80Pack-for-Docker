#!/bin/sh
# This script requires wget. Make sure it's installed. Also, while
# not required, TMUX is *highly* recommended.
# Ubuntu: apt-get install wget tmux
# Alpine: apk add wget tmux

# Updates:
# --------
#
# 2020-03-06 - Modified update code to:
#                change ./cpmsim $* to simcmd='./cpmsim $*'
#                append original ./cpmsim $* to end of file
#              Allows capturing original launch command & allows original
#              script to degrade gracefully if zpack_os can't be sourced.

zloc="$(pwd)"

inst() 
{ 
  # If for some reason the user decides to install packs w/o having
  # installed Z80Pack or into a location where Z80Pack hasn't been 
  # installed, make sure the dirs exist.

  mkdir -p $zloc/disks/library 
  mkdir -p $zloc/disks/backups
  cd $zloc

  if [ ! -f $1 ]; then
    wget https://www.autometer.de/unix4fun/z80pack/ftp/$1
  fi
  tar -xvf $1 && rm $1 

  cp -u -r disks/library/* disks/backups/

  echo " "
  echo "+-------------------------------+"
  echo " Installing $1"
  echo " "
  echo " Command(s) available: "
  
  # Update script files, and append the OS launch script
  # to make them more robust.
  
  for scr in $2 $3 $4 $5 $6
    do
      echo $scr
      sed -i 's/\.cpm/\.dsk/g' $scr
      sed -i 's/bin\/sh/bin\/bash/g' $scr
      sed -i 's/\.\/format/mkdskimg/g' $scr
#      sed -i 's/\.\/cpmsim/\#\.\/cpmsim/g' $scr
#      echo ". ./zpack_os" >> $scr
      simcmd=$(grep cpmsim $scr)
      sed -i "s|$simcmd|simcmd='$simcmd'|g" $scr
      echo ". ./zpack_os" >> $scr
      echo $simcmd >> $scr
    done
  echo "+-------------------------------+"
  echo " "

  cd -
}

menu1 () {
  while :
  do
    echo "+----------------------------------------------------------+"
    echo "|       Disk images with Digital Research OS sources       |"
    echo "|                                                          |"
    echo "| A) CP/M 2.0 source disk images with boot dsk bld scripts |"
    echo "| B) CP/M 2.2 source disk images with boot dsk bld scripts |"
    echo "| C) CP/M 2.2 src dsk, patches; tools are on A) or B) above|"
    echo "| D) CP/M 3 source disk images with build scripts          |"
    echo "| E) MP/M 2 source disk images with build scripts          |"
    echo "|                                                          |"
    echo "| Z) All the above                                         |"
    echo "+----------------------------------------------------------+"
    read -p "Choose a component to install (Q to return): " a

    case $a in
      A|a) inst cpm20src.tgz     cpm20src                         ;;
      B|b) inst cpm22src.tgz     cpm22src                         ;;
      C|c) inst cpm22src-pat.tgz cpm22srcp                        ;;
      D|d) inst cpm3src.tgz      cpm3src-p1 cpm3src-p2 cpm3src-p3 ;;
      E|e) inst mpmsrc.tgz       mpmsrc                           ;;
      Z|z) inst cpm20src.tgz     cpm20src
           inst cpm22src.tgz     cpm22src
           inst cpm22src-pat.tgz cpm22srcp
           inst cpm3src.tgz      cpm3src-p1 cpm3src-p2 cpm3src-p3
           inst mpmsrc.tgz       mpmsrc                           ;;
      Q|q) break ;;
      *) ;;
    esac
  done
}
    
menu2 () {
  while :
  do
    echo "+----------------------------------------------------------+"
    echo "|        CP/NET client and server boot disk images         |"
    echo "|                                                          |"
    echo "| A) Preconf'd CP/NET 1.0 MP/M server, customized sources  |"
    echo "| B) Preconf'd CP/NET 1.0 CP/M 2.2 client, cust sources    |"
    echo "| C) Preconf'd CP/NET 1.1 MP/M server, customized sources  |"
    echo "| D) Preconf'd CP/NET 1.1 CP/M 2.2 client, cust sources    |"
    echo "| E) Preconf'd CP/NET 1.2 MP/M server, customized sources  |"
    echo "| F) Preconf'd CP/NET 1.2 CP/M 2.2 client, cust sources    |"
    echo "|                                                          |"
    echo "| Z) All the above                                         |"
    echo "+----------------------------------------------------------+"
    read -p "Choose a component to install (Q to return): " a

    case $a in
      A|a) inst mpm-net-1.0.tgz  mpm-net0  ;;
      B|b) inst cpm2-net-1.0.tgz cpm2-net0 ;;
      C|c) inst mpm-net-1.1.tgz  mpm-net1  ;;
      D|d) inst cpm2-net-1.1.tgz cpm2-net1 ;;
      E|e) inst mpm-net-1.2.tgz  mpm-net2  ;;
      F|f) inst cpm2-net-1.2.tgz cpm2-net2 ;;
      Z|z) inst mpm-net-1.0.tgz  mpm-net0
           inst cpm2-net-1.0.tgz cpm2-net0
           inst mpm-net-1.1.tgz  mpm-net1
           inst cpm2-net-1.1.tgz cpm2-net1
           inst mpm-net-1.2.tgz  mpm-net2
           inst cpm2-net-1.2.tgz cpm2-net2 ;;
      Q|q) break ;;
      *) ;;
    esac
  done
}

menu3 () {
  while :
  do
    echo "+----------------------------------------------------------+"
    echo "|   Bootable disk images with Older CP/M bootable disks    |"
    echo "|                                                          |"
    echo "| A) 1975 CP/M version bootable image; sources see below   |"
    echo "| B) CP/M 1.3 bootable image, incl boot ldr, BIOS sources  |"
    echo "| C) CP/M 1.4 bootable image, incl boot ldr, BIOS sources  |"
    echo "|                                                          |"
    echo "| Z) All the above                                         |"
    echo "+----------------------------------------------------------+"
    read -p "Choose a component to install (Q to return): " a

    case $a in
      A|a) inst cpm1975.tgz cpm1975 ;;
      B|b) inst cpm13.tgz   cpm13   ;;
      C|c) inst cpm14.tgz   cpm14   ;;
      Z|z) inst cpm1975.tgz cpm1975 
           inst cpm13.tgz   cpm13
           inst cpm14.tgz   cpm14   ;;
      Q|q) break ;;
      *) ;;
    esac
  done
}
    
menu4 () {
  while :
  do
    echo "+----------------------------------------------------------+"
    echo "|        Variant CP/M configuration bootable images        |"
    echo "|                                                          |"
    echo "| A) 63K CP/M 2.2; check vectors for i:, j: HD protection  |"
    echo "| B) CP/M 3 8080 ver; chk vectrs for i:, j: HD corrupt prot|"
    echo "|                                                          |"
    echo "| Z) All the above                                         |"
    echo "+----------------------------------------------------------+"
    read -p "Choose a component to install (Q to return): " a

    case $a in
      A|a) inst cpm63k.tgz              ;;
      B|b) inst cpm3-8080.tgz cpm3-8080 ;;
      Z|z) inst cpm63k.tgz 
           inst cpm3-8080.tgz cpm3-8080 ;;
      Q|q) break ;;
      *) ;;
    esac
  done
}
    
menu5 () {
  while :
  do
    echo "+----------------------------------------------------------+"
    echo "|          Disk images with UCSD p-System for Z80          |"
    echo "|                                                          |"
    echo "| A) CP/M 2.2, boot record bld srcs p-Sys I.4, I.5, II.0.  |"
    echo "| B) p-Sys I.4 Z80 boot sys dsk, VT-100, ANSI terminals    |"
    echo "| C) p-Sys I.5 Z80 boot sys dsks, VT-100, ANSI terminals   |"
    echo "| D) p-Sys II.0 Z80 boot sys dsks, VT-100, ANSI terminals  |"
    echo "| E) p-Sys IV.0 Z80 boot sys dsks, VT-100, ANSI terminals  |"
    echo "| F) p-Sys I.5 for Z80, 8in images                         |"
    echo "| G) Modded p-Sys I.5 p-code interpreter sources           |"
    echo "| H) p-Sys II.0 for Z80, 8in imgs, repaired bitsavers imgs |"
    echo "| I) Modded p-Sys II.0 p-code interpreter sources          |"
    echo "| J) p-Sys IV.0 p-code interpreter objects                 |"
    echo "|                                                          |"
    echo "| Z) All the above                                         |"
    echo "+----------------------------------------------------------+"
    read -p "Choose a component to install (Q to return): " a

    case $a in
      A|a) inst ucsd-booter.tgz    ucsd-booter ;;
      B|b) inst ucsd-i4.tgz            ucsd-i4 ;;
      C|c) inst ucsd-i5.tgz            ucsd-i5 ;;
      D|d) inst ucsd-ii.tgz            ucsd-ii ;;
      E|e) inst ucsd-iv.tgz            ucsd-iv ;;
      F|f) inst ucsd-i5-disks.tgz              ;;
      G|g) inst ucsd-i5-interp.tgz             ;;
      H|h) inst ucsd-ii-disks.tgz              ;; 
      I|i) inst ucsd-ii-interp.tgz             ;;
      J|j) inst ucsd-iv-interp.tgz             ;;
      Z|z) inst ucsd-booter.tgz    ucsd-booter
           inst ucsd-i4.tgz            ucsd-i4
           inst ucsd-i5.tgz            ucsd-i5
           inst ucsd-ii.tgz            ucsd-ii
           inst ucsd-iv.tgz            ucsd-iv
           inst ucsd-i5-disks.tgz 
           inst ucsd-i5-interp.tgz 
           inst ucsd-ii-disks.tgz 
           inst ucsd-ii-interp.tgz  
           inst ucsd-iv-interp.tgz             ;;
      Q|q) break ;;
      *) ;;
    esac
  done
}
 
menu6 () {
  while :
  do
    echo "+----------------------------------------------------------+"
    echo "|             Other 8080/Z80 operating systems             |"
    echo "|                                                          |"
    echo "| A) CP/M 2.2 ZCPR1, all sources and documentation         |"
    echo "| B) CP/M 2.2 ZSDOS/ZCPR1, all sources and docs            |"
    echo "| C) Preconf'd NZ-COM ZSDOS/ZCPR3.4 CP/M 2.2, incl docs    |"
    echo "| D) CP/M 2.2 Z80CCP, incl source                          |"
    echo "| E) QP/M prebuilt bootable image                          |"
    echo "| F) DOS+ prebuilt bootable image                          |"
    echo "| G) ConIX HD img preinstalled for CP/M 2.2                |"
    echo "| H) MicroShell, UNIX-like features for CP/M               |"
    echo "| I) Microtools, other UNIX-like utils for CP/M            |"
    echo "| J) FUZIX preinstalled; work in progress                  |"
    echo "|                                                          |"
    echo "| Z) All the above                                         |"
    echo "+----------------------------------------------------------+"
    read -p "Choose a component to install (Q to return): " a

    case $a in
      A|a) inst zcpr1.tgz      zcpr1   ;;
      B|b) inst zsdos.tgz      zsdos   ;;
      C|c) inst nzcom.tgz      nzcom   ;;
      D|d) inst z80ccp.tgz     z80ccp  ;;
      E|e) inst qpm.tgz        qpm     ;;
      F|f) inst dosplus.tgz    dosplus ;;
      G|g) inst conix.tgz              ;;
      H|h) inst microshell.tgz         ;;
      I|i) inst microtools.tgz         ;;
      J|j) inst fuzix.tgz      fuzix   ;;
      Z|z) inst zcpr1.tgz      zcpr1
           inst zsdos.tgz      zsdos
           inst nzcom.tgz      nzcom
           inst z80ccp.tgz     z80ccp
           inst qpm.tgz        qpm
           inst dosplus.tgz    dosplus
           inst conix.tgz 
           inst microshell.tgz 
           inst microtools.tgz 
           inst fuzix.tgz      fuzix   ;;
      Q|q) break ;;
      *) ;;
    esac
  done
}
    
menu7 () {
  while :
  do
    echo "+----------------------------------------------------------+"
    echo "|    Disk images with CP/M application software, Menu 1    |"
    echo "|                                                          |"
    echo "| A) Word-Master 1.07 orig files, asm patch srcs, var terms|"
    echo "| B) Vedit 1.34, conf'd binary for ANSI term, cursor keymap|"
    echo "| C) WordStar 3.3, conf'd for VT-100 terminal              |"
    echo "| D) WordStar 4.0 HD img, conf'd for VT-100 terminal       |"
    echo "| E) ZDE 1.6, conf'd binary for ANSI term, cursor keymap   |"
    echo "| F) Complete ISIS tools, submit scrp to compile PL/M progs|"
    echo "| G) Microsoft Fortran-80 compiler version 3.44            |"
    echo "| H) PaloAlto Tinybasic src and exec w/SAVE & LOAD for CP/M|"
    echo "| I) Eubanks BASIC-E compilr srcs, bld scrp, BASIC examples|"
    echo "| J) XYBASIC sources HD img, bld scrp, executables         |"
    echo "| K) LLL Basic interpreter, Dr. Dobbs 1977, srcs, exes     |"
    echo "| L) MS BASIC Rev4.51, BASIC-80 Rev5.21, BASIC-85 Rev5.29  |"
    echo "| M) Microsoft Basic compiler 5.3                          |"
    echo "| N) DRI CBASIC 2, CB80 2.0 Basic compiler, GSX-80 graphics|"
    echo "| O) DRI GSX-80 v1.0 Graphics Extension                    |"
    echo "| P) DRI GSX-80 v1.1 Graphics Extension                    |"
    echo "| R) GSX-80 example programs in various programming langs  |"
    echo "| S) GSX-80 attached to mbasic interp; example BASIC progs |"
    echo "| T) DRI's DR Graph application, a chart tool using GSX-80 |"
    echo "| U) DRI's DR Draw application, a drawing tool using GSX-80|"
    echo "| V) ALGOL-M compiler for CP/M                             |"
    echo "|                                                          |"
    echo "| Z) All the above                                         |"
    echo "+----------------------------------------------------------+"
    read -p "Choose a component to install (Q to return): " a

    case $a in
      A|a) inst wm.tgz                 ;;
      B|b) inst vedit.tgz              ;;
      C|c) inst ws33.tgz               ;;
      D|d) inst ws40.tgz               ;;
      E|e) inst zde.tgz                ;;
      F|f) inst isis.tgz      isis     ;;
      G|g) inst f80-344.tgz            ;;
      H|h) inst tinybasic.tgz          ;;
      I|i) inst basice.tgz             ;;
      J|j) inst xybasic.tgz            ;;
      K|k) inst lllbasic.tgz  lllbasic ;;
      L|l) inst mbasic.tgz             ;;
      M|m) inst bascom.tgz             ;;
      N|n) inst cb80.tgz               ;;
      O|o) inst gsx80-1.0.tgz          ;;
      P|p) inst gsx80-1.1.tgz          ;;
      R|r) inst gsxprg.tgz             ;;
      S|s) inst gsxbasic.tgz           ;;
      T|t) inst drgraph.tgz            ;;
      U|u) inst drdraw.tgz             ;;
      V|v) inst algol-m.tgz   algol    ;;
      Z|z) inst wm.tgz 
           inst vedit.tgz  
           inst ws33.tgz  
           inst ws40.tgz  
           inst zde.tgz  
           inst isis.tgz isis 
           inst f80-344.tgz  
           inst tinybasic.tgz  
           inst basice.tgz  
           inst xybasic.tgz  
           inst lllbasic.tgz  lllbasic 
           inst mbasic.tgz 
           inst bascom.tgz  
           inst cb80.tgz  
           inst gsx80-1.0.tgz  
           inst gsx80-1.1.tgz 
           inst gsxprg.tgz  
           inst gsxbasic.tgz  
           inst drgraph.tgz  
           inst drdraw.tgz  
           inst algol-m.tgz  algol     ;;
      Q|q) break ;;
      *) ;;
    esac
  done
}

menu8 () {
  while :
  do
    echo "+----------------------------------------------------------+"
    echo "|    Disk images with CP/M application software, Menu 2    |"
    echo "|                                                          |"
    echo "| A) Starkweather 8080 Pilot interp, Dr. Dobbs 77, srcs    |"
    echo "| B) Comal-80 Rev. 2.10 for CP/M, VT-100/ANSI terminals    |"
    echo "| C) Z80MR macro assembler                                 |"
    echo "| D) figFORTH 1.1, 1.3 for 8080, editor, 8080 assembler    |"
    echo "| E) CP/M FORTH implementations using filesys as block dev |"
    echo "| F) Turbo Pascal 3.01A; ANSI terminal                     |"
    echo "| G) Q/C C compiler version 3.1a for Z80                   |"
    echo "| H) C/80 C compiler version 3.1 for 8080, HD img          |"
    echo "| I) Z80 Hitech-C V3.09, conf'd to run from J:             |"
    echo "| J) Kermit 4.11 build for cpmsim TCP/IP UART              |"
    echo "| K) CP/M 3 sys extensions, e.g. multiline command history |"
    echo "| L) CP/M help system 2.0, conf'd to use drive J:          |"
    echo "| M) Colossal Cave adventure, version A02, 350 points      |"
    echo "| N) A02 src for MSFortran-80/CPM, Cromemco Fortran IV/CDOS|"
    echo "| O) Colossal Cave adventure, version B00, 550 points. Z80 |"
    echo "| P) Colossal Cave adventure, version B01, 550 points. 8080|"
    echo "| R) Colossal Cave adventure, version B03, 580 points      |"
    echo "| S) Rogue 1.7 and Wanderer 2.2; QTERM patch VT-100/ANSI   |"
    echo "| T) Nemesis and Dungeon Master rpg; ANSI terminals        |"
    echo "| U) Infocom Planetfall, Hitchhikers Guide; ANSI terminals |"
    echo "| V) CP/M Chess programs                                   |"
    echo "|                                                          |"
    echo "| Z) All the above                                         |"
    echo "+----------------------------------------------------------+"
    read -p "Choose a component to install (Q to return): " a

    case $a in
      A|a) inst pilot.tgz       pilot ;;
      B|b) inst comal.tgz       comal ;;
      C|c) inst z80mr.tgz             ;;
      D|d) inst fig80.tgz       fig80 ;;
      E|e) inst forth.tgz             ;;
      F|f) inst tp301a.tgz      tp    ;;
      G|g) inst qc31a.tgz             ;;
      H|h) inst c80.tgz         c80   ;;
      I|i) inst hd-htc.tgz            ;;
      J|j) inst kermit.tgz            ;;
      K|k) inst cpm3tools.tgz         ;;
      L|l) inst help.tgz              ;;
      M|m) inst adv-a02.tgz           ;;
      N|n) inst adv-a02-src.tgz       ;;
      O|o) inst adv-b00.tgz           ;;
      P|p) inst adv-b01.tgz           ;;
      R|r) inst adv-b03.tgz           ;;
      S|s) inst rogue.tgz             ;;
      T|t) inst nemesis.tgz           ;;
      U|u) inst infocom.tgz           ;;
      V|v) inst chess.tgz             ;;
      Z|z) inst pilot.tgz       pilot
           inst comal.tgz       comal
           inst z80mr.tgz     
           inst fig80.tgz       fig80
           inst forth.tgz     
           inst tp301a.tgz      tp
           inst qc31a.tgz       
           inst c80.tgz         c80
           inst hd-htc.tgz    
           inst kermit.tgz    
           inst cpm3tools.tgz 
           inst help.tgz      
           inst adv-a02.tgz   
           inst adv-a02-src.tgz 
           inst adv-b00.tgz   
           inst adv-b01.tgz   
           inst adv-b03.tgz   
           inst rogue.tgz    
           inst nemesis.tgz   
           inst infocom.tgz   
           inst chess.tgz             ;;
      Q|q) break              ;;
      *)                      ;;
    esac
  done
}

menu9 () {
  while :
  do
    echo "+----------------------------------------------------------+"
    echo "|   Disk images with UCSD p-System application software    |"
    echo "|                                                          |"
    echo "| A) Colossal Cave, 500 pts, srcs. Tested with II.0.       |"
    echo "| B) Startrek. Too large for I.5, II.0, tested with IV.0.  |"
    echo "| C) Blackjack, Othello, Chase. Tested with II.0.          |"
    echo "| D) Bowles Database Homework Proj for II.0. Not completed.|"
    echo "|                                                          |"
    echo "| Z) All the above                                         |"
    echo "+----------------------------------------------------------+"
    read -p "Choose a component to install (Q to return): " a

    case $a in
      A|a) inst ucsd-adventure.tgz ;;
      B|b) inst ucsd-startrek.tgz ;;
      C|c) inst ucsd-games.tgz ;;
      D|d) inst ucsd-kbdb.tgz ;;
      Z|z) inst ucsd-adventure.tgz 
           inst ucsd-startrek.tgz 
           inst ucsd-games.tgz 
           inst ucsd-kbdb.tgz ;;
      Q|q) break              ;;
      *)                      ;;
    esac
  done
}

# --- MAIN ---

  while :
  do
    echo "+----------------------------------------------------------+"
    echo "|                        CATEGORIES                        |"
    echo "| A) Disk images with Digital Research OS sources          |"
    echo "| B) CP/NET client and server boot disk images             |"
    echo "| C) Bootable disk images with Older CP/M bootable disks   |"
    echo "| D) Variant CP/M configuration bootable images            |"
    echo "| E) Disk images with UCSD p-System for Z80                |"
    echo "| F) Other 8080/Z80 operating systems                      |"
    echo "| G) Disk images with CP/M application software, Menu 1    |"
    echo "| H) Disk images with CP/M application software, Menu 2    |"
    echo "| I) Disk images with UCSD p-System application software   |"
    echo "+----------------------------------------------------------+"
    read -p "Choose a component category (Q to exit): " a

    case $a in
      A|a) menu1 ;;
      B|b) menu2 ;;
      C|c) menu3 ;;
      D|d) menu4 ;;
      E|e) menu5 ;;
      F|f) menu6 ;;
      G|g) menu7 ;;
      H|h) menu8 ;;
      I|i) menu9 ;;
      Q|q) break ;;
      *) ;;
    esac
  done

echo " -------------------------------- "
echo " Z80Pack OS Installation Complete "
echo " -------------------------------- "

exit 0
